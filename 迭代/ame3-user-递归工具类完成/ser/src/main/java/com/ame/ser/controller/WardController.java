package com.ame.ser.controller;import com.ame.ser.service.ex.ParameterInvalidException;import com.ame.ser.model.Ward;import com.ame.ser.service.WardService;import com.ame.ser.vo.ResultVO;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.Page;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestBody;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import java.util.List;/** * 病区设置控制器 * @author SWJ */@RestController@RequestMapping("ward")public class WardController extends BaseController {    @Autowired    private WardService wardService;    @RequestMapping("create")    public ResultVO<Void> createWard(@RequestBody Ward ward){        if (ward.getName()==null || ward.getName().isEmpty()) {            throw new ParameterInvalidException("传入的参数是非法的，参考为:病区名字是空的");        }        wardService.createWard(ward);        return new ResultVO<>(SUCCESS);    }    @RequestMapping("show")    public ResultVO<Page<Ward>> showAllWardOnPage(int pageNo, int pageSize){        Page<Ward> PageWard =  wardService.findAllPage(pageNo, pageSize);        return new ResultVO<>(SUCCESS,PageWard);    }    @RequestMapping("/del/{id}")    public ResultVO<Void> del(@PathVariable("id") String id ){        wardService.delWardById(id);        return new ResultVO<>(SUCCESS);    }    @RequestMapping("delAll")    public ResultVO<Void> deleteByWardIdIn(  String ids){        List<String> LString = regDelAllData(ids);        wardService.deleteByWardIdIn(LString);        return new ResultVO<>(SUCCESS);    }    @RequestMapping("update")    public ResultVO<Void> update(@RequestBody Ward ward){        if (ward.getName()==null) {            throw new ParameterInvalidException("传入的参数有误");        }        wardService.update(ward.getWardId() , ward.getName(), ward.getWardDescribe());        return new ResultVO<>(SUCCESS);    }}