package com.ame.ser.controller;import com.ame.ser.enums.DictTypeEnum;import com.ame.ser.model.Dict;import com.ame.ser.service.DictService;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import com.ame.ser.service.ex.ParameterInvalidException;import com.ame.ser.vo.ResultVO;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.data.domain.Page;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestBody;import java.util.List;/** * 字典库控制器 * @author SWJ */@RestController@RequestMapping("dict")public class DictController extends BaseController {    @Autowired    private DictService dictService;    @RequestMapping("create")    public ResultVO<Void> createDict(@RequestBody Dict dict){        if (dict.getName()==null || dict.getName().isEmpty()) {            throw new ParameterInvalidException("传入的参数是非法的");        }        dictService.createDict(dict);        return new ResultVO<>(SUCCESS);    }    @RequestMapping("show")    public ResultVO<Page<Dict>> showAllDictOnPage(int pageNo, int pageSize){        Page<Dict> PageDict =  dictService.findAllPage(pageNo, pageSize);        return new ResultVO<>(SUCCESS,PageDict);    }    @RequestMapping("/del/{id}")    public ResultVO<Void> del(@PathVariable("id") String id ){        dictService.delDictById(id);        return new ResultVO<>(SUCCESS);    }    @RequestMapping("delAll")    public ResultVO<Void> deleteByDictIdIn(  String ids){        List<String> LString = regDelAllData(ids);        dictService.deleteByDictIdIn(LString);        return new ResultVO<>(SUCCESS);    }    @RequestMapping("update")    public ResultVO<Void> update(@RequestBody Dict dict){        if (dict.getName()==null || !(dict.getDictType() instanceof DictTypeEnum)) {            throw new ParameterInvalidException("传入的参数有误");        }        dictService.update(dict.getDictId() , dict.getName(), dict.getDictDescribe(),dict.getDictType());        return new ResultVO<>(SUCCESS);    }}